<%- include("../../views/partials/user/header/") %>

<!-- Start Banner Area -->
<section class="banner-area organic-breadcrumb">
    <div class="container">
        <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
            <div class="col-first">
                <h1>Shopping Cart</h1>
                <nav class="d-flex align-items-center">
                    <a href="index.html">Home<span class="lnr lnr-arrow-right"></span></a>
                    <a href="category.html">Cart</a>
                </nav>
            </div>
        </div>
    </div>
</section>
<!-- End Banner Area -->

<!--================Cart Area =================-->
<!--================Cart Area =================-->
<section class="cart_area">
    <div class="container">
        <div class="cart_inner">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Product</th>
                            <th scope="col">Price</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% cart.items.forEach(item => { %>
                        <tr data-product-max="<%= item.productId.quantity %>" data-product-id="<%= item.productId._id %>">
                            <td>
                                <div class="media">
                                    <div class="d-flex">
                                        <img class="cart-image" src="/uploads/product-images/<%= item.productId.productImages[0] %>" alt="<%= item.productId.productName %>" style="width: 50px; height: auto;">
                                    </div>
                                    <div class="media-body">
                                        <p><%= item.productId.productName %></p>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <h5>$<%= item.price.toFixed(2) %></h5>
                            </td>
                            <td>
                                <div class="product_count">
                                    <input type="number" 
                                           name="qty" 
                                           id="sst<%= item.productId._id %>" 
                                           value="<%= item.quantity %>" 
                                           title="Quantity:" 
                                           class="input-text qty" 
                                           min="1" 
                                           max="<%= Math.min(item.productId.quantity, 5) %>"
                                           data-price="<%= item.price %>"
                                           oninput="updateTotalPrice('<%= item.productId._id %>', this)">
                                    <button onclick="updateQuantity('<%= item.productId._id %>', 'increase')" 
                                            class="increase items-count" 
                                            type="button">
                                        <i class="lnr lnr-chevron-up"></i>
                                    </button>
                                    <button onclick="updateQuantity('<%= item.productId._id %>', 'decrease')" 
                                            class="reduced items-count" 
                                            type="button">
                                        <i class="lnr lnr-chevron-down"></i>
                                    </button>
                                </div>
                            </td>
                            <td>
                                <h5 class="total-price" id="totalPrice<%= item.productId._id %>">
                                    $<%= item.totalPrice.toFixed(2) %>
                                </h5>
                            </td>
                            <td>
                                <button onclick="deleteItem('<%= item.productId._id %>')" class="btn btn-danger">Delete</button>
                            </td>
                        </tr>
                        <% }) %>
                        <tr>
                            <td></td>
                            <td></td>
                            <td>
                                <h5>Subtotal</h5>
                            </td>
                            <td>
                                <h5 id="subtotal">$<%= cart.items.reduce((sum, item) => sum + item.totalPrice, 0).toFixed(2) %></h5>
                            </td>
                        </tr>
                        <tr class="out_button_area">
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>
                                <div class="checkout_btn_inner d-flex align-items-center">
                                    <a class="gray_btn" href="/shop-page">Continue Shopping</a>
                                    <a class="primary-btn" href="/checkout">Proceed to checkout</a>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>
<!--================End Cart Area =================-->

<%- include("../../views/partials/user/footer/") %>


<script>
    function updateQuantity(productId, action) {
        const quantityInput = document.getElementById(`sst${productId}`);
        const productRow = quantityInput.closest('tr');
        const maxQuantity = parseInt(productRow.dataset.productMax);
        const effectiveMaxQuantity = Math.min(maxQuantity, 5);
        let currentQuantity = parseInt(quantityInput.value);
    
        if (action === 'increase') {
            if (currentQuantity < effectiveMaxQuantity) {
                currentQuantity++;
            } else {
                Swal.fire({
                    icon: 'info',
                    title: 'Quantity Limit Reached',
                    text: `You can only add up to ${effectiveMaxQuantity} items for this product.`
                });
                return;
            }
        } else if (action === 'decrease') {
            if (currentQuantity > 1) {
                currentQuantity--;
            } else {
                return;
            }
        }
    
        quantityInput.value = currentQuantity;
        updateTotalPrice(productId, quantityInput);
    
        // Send updated quantity to server
        fetch(`/updateCart/${productId}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ quantity: currentQuantity })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Failed to update cart');
            }
            return response.json();
        })
        .then(() => {
            updateSubtotal();
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to update cart quantity'
            });
        });
    }
    
    function updateTotalPrice(productId, quantityInput) {
        const pricePerUnit = parseFloat(quantityInput.dataset.price);
        const quantity = parseInt(quantityInput.value);
        const totalPriceElement = document.getElementById(`totalPrice${productId}`);
        const newTotal = (pricePerUnit * quantity).toFixed(2);
        totalPriceElement.innerHTML = `$${newTotal}`;
        updateSubtotal();
    }
    
    function updateSubtotal() {
        const totalElements = document.querySelectorAll('.total-price');
        let subtotal = Array.from(totalElements).reduce((sum, el) => {
            const price = parseFloat(el.innerText.replace('$', ''));
            return sum + (isNaN(price) ? 0 : price);
        }, 0);
        document.getElementById('subtotal').innerText = `$${subtotal.toFixed(2)}`;
    }
    
    function deleteItem(productId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/removeFromCart/${productId}`, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to delete item');
                    }
                    location.reload();
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error', 'Failed to delete item', 'error');
                });
            }
        });
    }
    </script>

    
